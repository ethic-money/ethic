{
  "contractName": "LibEIP712",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/ville/projects/ethic/protocol/contracts/external/LibEIP712.sol\":\"LibEIP712\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ville/projects/ethic/protocol/contracts/external/LibEIP712.sol\":{\"keccak256\":\"0xf4d7a88da8be529a53feaa65d110288b003763df23a02c8f9e91058fe653c638\",\"urls\":[\"bzz-raw://4c252f8983678ed15c03b59f9579959591d1fb7a0772b4057277fe6977b2ce7b\",\"dweb:/ipfs/QmNTXwdPULiUBZkWa8Dj5aJ3DDhrmBpMqaFMShAdACYbSj\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582051cc6ffd928c69b3445c5196db24756d664490625f3e588d82d81bc6d2b83a9c64736f6c63430005110032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582051cc6ffd928c69b3445c5196db24756d664490625f3e588d82d81bc6d2b83a9c64736f6c63430005110032",
  "sourceMap": "622:3127:16:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "622:3127:16:-;;;;;;;;",
  "source": "/*\n    Copyright 2019 ZeroEx Intl.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity ^0.5.9;\n\n\nlibrary LibEIP712 {\n\n    // Hash of the EIP712 Domain Separator Schema\n    // keccak256(abi.encodePacked(\n    //     \"EIP712Domain(\",\n    //     \"string name,\",\n    //     \"string version,\",\n    //     \"uint256 chainId,\",\n    //     \"address verifyingContract\",\n    //     \")\"\n    // ))\n    bytes32 constant internal _EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH = 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f;\n\n    /// @dev Calculates a EIP712 domain separator.\n    /// @param name The EIP712 domain name.\n    /// @param version The EIP712 domain version.\n    /// @param verifyingContract The EIP712 verifying contract.\n    /// @return EIP712 domain separator.\n    function hashEIP712Domain(\n        string memory name,\n        string memory version,\n        uint256 chainId,\n        address verifyingContract\n    )\n    internal\n    pure\n    returns (bytes32 result)\n    {\n        bytes32 schemaHash = _EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH;\n\n        // Assembly for more efficient computing:\n        // keccak256(abi.encodePacked(\n        //     _EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH,\n        //     keccak256(bytes(name)),\n        //     keccak256(bytes(version)),\n        //     chainId,\n        //     uint256(verifyingContract)\n        // ))\n\n        assembly {\n        // Calculate hashes of dynamic data\n            let nameHash := keccak256(add(name, 32), mload(name))\n            let versionHash := keccak256(add(version, 32), mload(version))\n\n        // Load free memory pointer\n            let memPtr := mload(64)\n\n        // Store params in memory\n            mstore(memPtr, schemaHash)\n            mstore(add(memPtr, 32), nameHash)\n            mstore(add(memPtr, 64), versionHash)\n            mstore(add(memPtr, 96), chainId)\n            mstore(add(memPtr, 128), verifyingContract)\n\n        // Compute hash\n            result := keccak256(memPtr, 160)\n        }\n        return result;\n    }\n\n    /// @dev Calculates EIP712 encoding for a hash struct with a given domain hash.\n    /// @param eip712DomainHash Hash of the domain domain separator data, computed\n    ///                         with getDomainHash().\n    /// @param hashStruct The EIP712 hash struct.\n    /// @return EIP712 hash applied to the given EIP712 Domain.\n    function hashEIP712Message(bytes32 eip712DomainHash, bytes32 hashStruct)\n    internal\n    pure\n    returns (bytes32 result)\n    {\n        // Assembly for more efficient computing:\n        // keccak256(abi.encodePacked(\n        //     EIP191_HEADER,\n        //     EIP712_DOMAIN_HASH,\n        //     hashStruct\n        // ));\n\n        assembly {\n        // Load free memory pointer\n            let memPtr := mload(64)\n\n            mstore(memPtr, 0x1901000000000000000000000000000000000000000000000000000000000000)  // EIP191 header\n            mstore(add(memPtr, 2), eip712DomainHash)                                            // EIP712 domain hash\n            mstore(add(memPtr, 34), hashStruct)                                                 // Hash of struct\n\n        // Compute hash\n            result := keccak256(memPtr, 66)\n        }\n        return result;\n    }\n}",
  "sourcePath": "/home/ville/projects/ethic/protocol/contracts/external/LibEIP712.sol",
  "ast": {
    "absolutePath": "/home/ville/projects/ethic/protocol/contracts/external/LibEIP712.sol",
    "exportedSymbols": {
      "LibEIP712": [
        5192
      ]
    },
    "id": 5193,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5154,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "596:23:16"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5192,
        "linearizedBaseContracts": [
          5192
        ],
        "name": "LibEIP712",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 5157,
            "name": "_EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 5192,
            "src": "913:131:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5155,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "913:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
              "id": 5156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "978:66:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
                "typeString": "int_const 6307...(69 digits omitted)...1551"
              },
              "value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5177,
              "nodeType": "Block",
              "src": "1507:1029:16",
              "statements": [
                {
                  "assignments": [
                    5171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5171,
                      "name": "schemaHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 5177,
                      "src": "1517:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5170,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1517:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5173,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 5172,
                    "name": "_EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5157,
                    "src": "1538:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1517:57:16"
                },
                {
                  "externalReferences": [
                    {
                      "name": {
                        "declaration": 5159,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1986:4:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "name": {
                        "declaration": 5159,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2003:4:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "version": {
                        "declaration": 5161,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2055:7:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "version": {
                        "declaration": 5161,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2075:7:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 5168,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2465:6:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "schemaHash": {
                        "declaration": 5171,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2220:10:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "chainId": {
                        "declaration": 5163,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2363:7:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "verifyingContract": {
                        "declaration": 5165,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2409:17:16",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 5174,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let nameHash := keccak256(add(name, 32), mload(name))\n    let versionHash := keccak256(add(version, 32), mload(version))\n    let memPtr := mload(64)\n    mstore(memPtr, schemaHash)\n    mstore(add(memPtr, 32), nameHash)\n    mstore(add(memPtr, 64), versionHash)\n    mstore(add(memPtr, 96), chainId)\n    mstore(add(memPtr, 128), verifyingContract)\n    result := keccak256(memPtr, 160)\n}",
                  "src": "1889:618:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5175,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5168,
                    "src": "2523:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5169,
                  "id": 5176,
                  "nodeType": "Return",
                  "src": "2516:13:16"
                }
              ]
            },
            "documentation": "@dev Calculates a EIP712 domain separator.\n @param name The EIP712 domain name.\n @param version The EIP712 domain version.\n @param verifyingContract The EIP712 verifying contract.\n @return EIP712 domain separator.",
            "id": 5178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashEIP712Domain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5159,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1336:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5158,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5161,
                  "name": "version",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1364:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5163,
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1395:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5165,
                  "name": "verifyingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1420:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1326:125:16"
            },
            "returnParameters": {
              "id": 5169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5168,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1487:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5167,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1486:16:16"
            },
            "scope": 5192,
            "src": "1301:1235:16",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5190,
              "nodeType": "Block",
              "src": "3005:742:16",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "hashStruct": {
                        "declaration": 5182,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3562:10:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 5185,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3677:6:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "eip712DomainHash": {
                        "declaration": 5180,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3443:16:16",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 5187,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(64)\n    mstore(memPtr, 0x1901000000000000000000000000000000000000000000000000000000000000)\n    mstore(add(memPtr, 2), eip712DomainHash)\n    mstore(add(memPtr, 34), hashStruct)\n    result := keccak256(memPtr, 66)\n}",
                  "src": "3211:507:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5188,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5185,
                    "src": "3734:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5186,
                  "id": 5189,
                  "nodeType": "Return",
                  "src": "3727:13:16"
                }
              ]
            },
            "documentation": "@dev Calculates EIP712 encoding for a hash struct with a given domain hash.\n @param eip712DomainHash Hash of the domain domain separator data, computed\n                         with getDomainHash().\n @param hashStruct The EIP712 hash struct.\n @return EIP712 hash applied to the given EIP712 Domain.",
            "id": 5191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashEIP712Message",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5180,
                  "name": "eip712DomainHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "2904:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5179,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5182,
                  "name": "hashStruct",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "2930:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5181,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2903:46:16"
            },
            "returnParameters": {
              "id": 5186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5185,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "2985:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5184,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2984:16:16"
            },
            "scope": 5192,
            "src": "2877:870:16",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5193,
        "src": "622:3127:16"
      }
    ],
    "src": "596:3153:16"
  },
  "legacyAST": {
    "absolutePath": "/home/ville/projects/ethic/protocol/contracts/external/LibEIP712.sol",
    "exportedSymbols": {
      "LibEIP712": [
        5192
      ]
    },
    "id": 5193,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5154,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "596:23:16"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5192,
        "linearizedBaseContracts": [
          5192
        ],
        "name": "LibEIP712",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 5157,
            "name": "_EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 5192,
            "src": "913:131:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5155,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "913:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
              "id": 5156,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "978:66:16",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
                "typeString": "int_const 6307...(69 digits omitted)...1551"
              },
              "value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5177,
              "nodeType": "Block",
              "src": "1507:1029:16",
              "statements": [
                {
                  "assignments": [
                    5171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5171,
                      "name": "schemaHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 5177,
                      "src": "1517:18:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5170,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1517:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5173,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 5172,
                    "name": "_EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5157,
                    "src": "1538:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1517:57:16"
                },
                {
                  "externalReferences": [
                    {
                      "name": {
                        "declaration": 5159,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1986:4:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "name": {
                        "declaration": 5159,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2003:4:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "version": {
                        "declaration": 5161,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2055:7:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "version": {
                        "declaration": 5161,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2075:7:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 5168,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2465:6:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "schemaHash": {
                        "declaration": 5171,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2220:10:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "chainId": {
                        "declaration": 5163,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2363:7:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "verifyingContract": {
                        "declaration": 5165,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "2409:17:16",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 5174,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let nameHash := keccak256(add(name, 32), mload(name))\n    let versionHash := keccak256(add(version, 32), mload(version))\n    let memPtr := mload(64)\n    mstore(memPtr, schemaHash)\n    mstore(add(memPtr, 32), nameHash)\n    mstore(add(memPtr, 64), versionHash)\n    mstore(add(memPtr, 96), chainId)\n    mstore(add(memPtr, 128), verifyingContract)\n    result := keccak256(memPtr, 160)\n}",
                  "src": "1889:618:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5175,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5168,
                    "src": "2523:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5169,
                  "id": 5176,
                  "nodeType": "Return",
                  "src": "2516:13:16"
                }
              ]
            },
            "documentation": "@dev Calculates a EIP712 domain separator.\n @param name The EIP712 domain name.\n @param version The EIP712 domain version.\n @param verifyingContract The EIP712 verifying contract.\n @return EIP712 domain separator.",
            "id": 5178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashEIP712Domain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5159,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1336:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5158,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5161,
                  "name": "version",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1364:21:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5163,
                  "name": "chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1395:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5165,
                  "name": "verifyingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1420:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1326:125:16"
            },
            "returnParameters": {
              "id": 5169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5168,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 5178,
                  "src": "1487:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5167,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1486:16:16"
            },
            "scope": 5192,
            "src": "1301:1235:16",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5190,
              "nodeType": "Block",
              "src": "3005:742:16",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "hashStruct": {
                        "declaration": 5182,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3562:10:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "result": {
                        "declaration": 5185,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3677:6:16",
                        "valueSize": 1
                      }
                    },
                    {
                      "eip712DomainHash": {
                        "declaration": 5180,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3443:16:16",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 5187,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let memPtr := mload(64)\n    mstore(memPtr, 0x1901000000000000000000000000000000000000000000000000000000000000)\n    mstore(add(memPtr, 2), eip712DomainHash)\n    mstore(add(memPtr, 34), hashStruct)\n    result := keccak256(memPtr, 66)\n}",
                  "src": "3211:507:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5188,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5185,
                    "src": "3734:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5186,
                  "id": 5189,
                  "nodeType": "Return",
                  "src": "3727:13:16"
                }
              ]
            },
            "documentation": "@dev Calculates EIP712 encoding for a hash struct with a given domain hash.\n @param eip712DomainHash Hash of the domain domain separator data, computed\n                         with getDomainHash().\n @param hashStruct The EIP712 hash struct.\n @return EIP712 hash applied to the given EIP712 Domain.",
            "id": 5191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashEIP712Message",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5180,
                  "name": "eip712DomainHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "2904:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5179,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5182,
                  "name": "hashStruct",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "2930:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5181,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2930:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2903:46:16"
            },
            "returnParameters": {
              "id": 5186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5185,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 5191,
                  "src": "2985:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5184,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2984:16:16"
            },
            "scope": 5192,
            "src": "2877:870:16",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5193,
        "src": "622:3127:16"
      }
    ],
    "src": "596:3153:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-27T15:31:27.878Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}